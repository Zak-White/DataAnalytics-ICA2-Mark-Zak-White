[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Technology Exploration",
    "section": "",
    "text": "About this site\n\n# The Technology Exploration that I utilised is in a few \n# of the packages that I needed to use for completing\n# the queries in part A. The new ones as far as I am aware\n# are: Stringr and Lubridate both of which I use for some\n# of the queries that I create in part A. The main functions\n# of Lubridate seem to be with the changing of date formatting\n# (atleast this is how I used it) to fit in with the diff time \n# function that comes prepackaged with R. \n# \n# Stringr on the other hand I use less often but it comes packaged \n# with a function that allows me to directly count how many times a \n# string has shown up that I try to use for a question in part A. \n# I believe my logic in answering that question was correct but it\n# might be my exectution that was off."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ica-2-DAIE-MXW",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\nlibrary(DBI)\n\nWarning: package 'DBI' was built under R version 4.3.2\n\nlibrary(RSQLite)\n\nWarning: package 'RSQLite' was built under R version 4.3.2\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.2\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(lubridate)\n\nWarning: package 'lubridate' was built under R version 4.3.2\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(stringr)\n\nWarning: package 'stringr' was built under R version 4.3.2\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\n\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nWarning: package 'tibble' was built under R version 4.3.2\n\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\n\nWarning: package 'readr' was built under R version 4.3.2\n\n\nWarning: package 'purrr' was built under R version 4.3.2\n\n\nWarning: package 'forcats' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats 1.0.0     ✔ readr   2.1.4\n✔ ggplot2 3.4.4     ✔ tibble  3.2.1\n✔ purrr   1.0.2     ✔ tidyr   1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nIcadb &lt;- dbConnect(SQLite(), \"ICA_2023.sqlite\")\n\ndbListTables(Icadb)\n\n[1] \"Assets\"            \"AssetsDevelopers\"  \"Customers\"        \n[4] \"Developers\"        \"ProjectDevelopers\" \"Projects\"         \n[7] \"ProjectsBudget\"    \"Timelines\"        \n\ndbListFields(Icadb, \"Projects\")\n\n[1] \"ProjectID\"   \"ProjectName\" \"StartDate\"   \"EndDate\"     \"Budget\"     \n[6] \"Status\"      \"CustomerID\" \n\nProjects &lt;- tbl(Icadb, \"Projects\")\n\nprojects_df &lt;- collect(Projects)\n\nprojects_df\n\n# A tibble: 8 × 7\n  ProjectID ProjectName       StartDate  EndDate    Budget Status     CustomerID\n      &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;      &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;           &lt;int&gt;\n1       101 Galaxy Quest      2021-01-01 2021-09-30 100000 Completed           1\n2       102 Mystic Realms     2021-10-01 2021-12-31 200000 Completed           2\n3       103 Shadow Legacy     2022-01-01 2022-09-30 150000 Completed           3\n4       104 Urban Adventure   2022-10-01 2023-02-31 250000 Completed           4\n5       105 Ocean Odyssey     2023-03-01 2024-06-30 300000 In Progre…          5\n6       106 Desert Survival   2024-07-01 2024-12-31 350000 Planned             6\n7       107 Frozen Frontier   2025-01-01 2025-06-30 400000 Planned             7\n8       108 Cybernetic Dreams 2025-07-01 2025-12-31 450000 Planned             8\n\nprojects_df2 &lt;- collect(Projects)\n\nprojects_df2\n\n# A tibble: 8 × 7\n  ProjectID ProjectName       StartDate  EndDate    Budget Status     CustomerID\n      &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;      &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;           &lt;int&gt;\n1       101 Galaxy Quest      2021-01-01 2021-09-30 100000 Completed           1\n2       102 Mystic Realms     2021-10-01 2021-12-31 200000 Completed           2\n3       103 Shadow Legacy     2022-01-01 2022-09-30 150000 Completed           3\n4       104 Urban Adventure   2022-10-01 2023-02-31 250000 Completed           4\n5       105 Ocean Odyssey     2023-03-01 2024-06-30 300000 In Progre…          5\n6       106 Desert Survival   2024-07-01 2024-12-31 350000 Planned             6\n7       107 Frozen Frontier   2025-01-01 2025-06-30 400000 Planned             7\n8       108 Cybernetic Dreams 2025-07-01 2025-12-31 450000 Planned             8\n\nAssets &lt;- tbl(Icadb, \"Assets\")\n\nassets_df &lt;- collect(Assets)\n\nassets_df\n\n# A tibble: 42 × 5\n   AssetID ProjectID AssetName Type               CreationDate\n     &lt;int&gt;     &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;              &lt;chr&gt;       \n 1       1       102 Asset 1   Level Design       2021-02-15  \n 2       2       103 Asset 2   Cinematic          2021-03-15  \n 3       3       104 Asset 3   3D Model           2021-04-15  \n 4       4       101 Asset 4   Gameplay Script    2021-05-15  \n 5       5       102 Asset 5   Environment Design 2021-06-15  \n 6       6       103 Asset 6   Level Design       2021-01-15  \n 7       7       104 Asset 7   Texture            2021-02-15  \n 8       8       101 Asset 8   Cinematic          2021-03-15  \n 9       9       102 Asset 9   Texture            2021-04-15  \n10      10       103 Asset 10  Environment Design 2021-05-15  \n# ℹ 32 more rows\n\nDevelopers &lt;- tbl(Icadb, \"Developers\")\n\ndevelopers_df &lt;- collect(Developers)\n\ndevelopers_df\n\n# A tibble: 14 × 4\n   DeveloperID Name           Specialization    ExperienceYears\n         &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;                       &lt;int&gt;\n 1         201 Alice Johnson  Programmer                      5\n 2         202 Bob Smith      Programmer                      3\n 3         203 Carol White    Artist                          4\n 4         204 Dave Brown     Game Designer                   6\n 5         205 Eve Davis      Animator                        7\n 6         206 Frank Miller   Sound Engineer                  5\n 7         207 Grace Wilson   Level Designer                  2\n 8         208 Henry Moore    UI/UX Designer                  4\n 9         209 Isabel Taylor  Quality Assurance               3\n10         210 Jack Martinez  Technical Artist                5\n11         211 Karen Garcia   Producer                        8\n12         212 Luis Hernandez Writer                          6\n13         213 Morgan Lee     Project Manager                10\n14         214 Jordan Kim     Project Manager                 8\n\nTimelines &lt;- tbl(Icadb, \"Timelines\")\n\ntimelines_df &lt;- collect(Timelines)\n\ntimelines_df\n\n# A tibble: 8 × 5\n  TimelineID ProjectID Milestone     ExpectedCompletionDate ActualCompletionDate\n       &lt;int&gt;     &lt;int&gt; &lt;chr&gt;         &lt;chr&gt;                  &lt;chr&gt;               \n1          1       101 Beta Release  2021-01-15             2021-01-14          \n2          2       102 Beta Release  2021-07-15             2021-07-14          \n3          3       103 Beta Release  2022-03-15             2022-03-14          \n4          4       104 Beta Release  2022-10-15             2022-10-14          \n5          5       105 Beta Release  2023-03-01             &lt;NA&gt;                \n6          6       106 Pre-producti… 2023-10-01             &lt;NA&gt;                \n7          7       107 Project Plan… 2024-03-01             &lt;NA&gt;                \n8          8       108 Project Plan… 2024-10-01             &lt;NA&gt;                \n\nCustomers &lt;- tbl(Icadb, \"Customers\")\n\nCustomers_df &lt;- collect(Customers)\n\nCustomers_df\n\n# A tibble: 8 × 4\n  CustomerID CustomerName          CustomerCity CustomerCountry\n       &lt;int&gt; &lt;chr&gt;                 &lt;chr&gt;        &lt;chr&gt;          \n1          1 Vertex Games          London       UK             \n2          2 Eclipse Entertainment Paris        France         \n3          3 Aurora Studios        Berlin       Germany        \n4          4 Nebula Creations      Rome         Italy          \n5          5 Cosmic Interactive    Madrid       Spain          \n6          6 Galactic Games        Barcelona    Spain          \n7          7 Nova Software         Amsterdam    Netherlands    \n8          8 Infinity Designs      Edinburgh    UK             \n\nProjectDevelopers &lt;- tbl(Icadb, \"ProjectDevelopers\")\n\nprojectdevelopers_df &lt;- collect(ProjectDevelopers)\n\nprojectdevelopers_df\n\n# A tibble: 8 × 3\n  ProjectID DeveloperID Role \n      &lt;int&gt;       &lt;int&gt; &lt;chr&gt;\n1       101         214 Lead \n2       102         213 Lead \n3       103         201 Lead \n4       104         213 Lead \n5       105         214 Lead \n6       106         211 Lead \n7       107         214 Lead \n8       108         211 Lead \n\nprojectdevelopers_df2 &lt;- collect(ProjectDevelopers)\n\nprojectdevelopers_df2\n\n# A tibble: 8 × 3\n  ProjectID DeveloperID Role \n      &lt;int&gt;       &lt;int&gt; &lt;chr&gt;\n1       101         214 Lead \n2       102         213 Lead \n3       103         201 Lead \n4       104         213 Lead \n5       105         214 Lead \n6       106         211 Lead \n7       107         214 Lead \n8       108         211 Lead \n\nAssetsDevelopers &lt;- tbl(Icadb, \"AssetsDevelopers\")\n\nassetsdevelopers_df &lt;- collect(AssetsDevelopers)\n\nassetsdevelopers_df\n\n# A tibble: 42 × 2\n   AssetID DeveloperID\n     &lt;int&gt;       &lt;int&gt;\n 1       1           3\n 2       2           8\n 3       3           8\n 4       4           2\n 5       5          11\n 6       6           7\n 7       7           8\n 8       8           6\n 9       9           2\n10      10           9\n# ℹ 32 more rows\n\ndbRemoveTable(Icadb, \"ProjectsBudget\")\ndbExecute(Icadb, \"CREATE Table ProjectsBudget AS\n\n                  SELECT Budget, CustomerCountry\n\n                 FROM Projects, Customers\")\n\n[1] 0\n\n#dbReadTable(Icadb, \"ProjectsBudget\")\n\n#A-1 Mostly working just not printing in correct order but the code is all there\nProjectsBudget_df &lt;-inner_join( Customers_df, projects_df,\n                                      by = c(\"CustomerID\"))\nProjectsBudget_df &lt;- ProjectsBudget_df[,-c(2,3,5,7,8,10)]\nProjectsBudget_df &lt;- ProjectsBudget_df[order(-ProjectsBudget_df$Budget),] # Should showcase the order correctly but it no longer does. This works before the summarise?\nProjectsBudget_df &lt;- ProjectsBudget_df %&gt;% group_by(CustomerCountry)\nProjectsBudget_df &lt;- ProjectsBudget_df %&gt;% arrange(desc(Budget))\nProjectsBudget_df &lt;- ProjectsBudget_df %&gt;% summarise(sum(Budget))\nProjectsBudget_df\n\n# A tibble: 6 × 2\n  CustomerCountry `sum(Budget)`\n  &lt;chr&gt;                   &lt;int&gt;\n1 France                 200000\n2 Germany                150000\n3 Italy                  250000\n4 Netherlands            400000\n5 Spain                  650000\n6 UK                     550000\n\n#A-2 I got the days between and I have the mean code there but this question would not cooperate with me at all\nAssetsProjects_df &lt;- inner_join(projects_df, assets_df,\n                                by = c(\"ProjectID\"))\nAssetsProjects_df &lt;-AssetsProjects_df[,-c(5,6,7,8,9,10)]\nAssetsProjects_df &lt;- AssetsProjects_df %&gt;% group_by(ProjectID) %&gt;% mutate(EndDate = ymd(EndDate),StartDate = ymd(StartDate)) %&gt;% mutate(diff=as.numeric(difftime(EndDate, StartDate, units = \"days\"))) %&gt;% mutate(meanDays = mean(diff)) \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `EndDate = ymd(EndDate)`.\nℹ In group 4: `ProjectID = 104`.\nCaused by warning:\n!  10 failed to parse.\n\nAssetsProjects_df\n\n# A tibble: 42 × 7\n# Groups:   ProjectID [4]\n   ProjectID ProjectName  StartDate  EndDate    CreationDate  diff meanDays\n       &lt;int&gt; &lt;chr&gt;        &lt;date&gt;     &lt;date&gt;     &lt;chr&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n 1       101 Galaxy Quest 2021-01-01 2021-09-30 2021-05-15     272      272\n 2       101 Galaxy Quest 2021-01-01 2021-09-30 2021-03-15     272      272\n 3       101 Galaxy Quest 2021-01-01 2021-09-30 2021-01-15     272      272\n 4       101 Galaxy Quest 2021-01-01 2021-09-30 2021-05-15     272      272\n 5       101 Galaxy Quest 2021-01-01 2021-09-30 2021-03-15     272      272\n 6       101 Galaxy Quest 2021-01-01 2021-09-30 2021-01-15     272      272\n 7       101 Galaxy Quest 2021-01-01 2021-09-30 2021-05-15     272      272\n 8       101 Galaxy Quest 2021-01-01 2021-09-30 2021-03-15     272      272\n 9       101 Galaxy Quest 2021-01-01 2021-09-30 2021-01-15     272      272\n10       101 Galaxy Quest 2021-01-01 2021-09-30 2021-05-15     272      272\n# ℹ 32 more rows\n\n#A-3 Going to create a table that adds projects and developers and where the project is completed it will print that out\nstatus &lt;- projects_df$Status\nstatus\n\n[1] \"Completed\"   \"Completed\"   \"Completed\"   \"Completed\"   \"In Progress\"\n[6] \"Planned\"     \"Planned\"     \"Planned\"    \n\nComStatus &lt;- sum(str_count(status, \"Completed\"))\nprojectdevelopers_df\n\n# A tibble: 8 × 3\n  ProjectID DeveloperID Role \n      &lt;int&gt;       &lt;int&gt; &lt;chr&gt;\n1       101         214 Lead \n2       102         213 Lead \n3       103         201 Lead \n4       104         213 Lead \n5       105         214 Lead \n6       106         211 Lead \n7       107         214 Lead \n8       108         211 Lead \n\nprojectdevelopers_df &lt;- projectdevelopers_df %&gt;% mutate(Status = status) %&gt;% group_by(DeveloperID) %&gt;% summarize(DevComplete = ComStatus) %&gt;% arrange(desc(ComStatus))\n#I am not sure why they are all equal to 4 as I thought the group by would split it per case but This is the basics of How you would do this question\nprojectdevelopers_df &lt;-projectdevelopers_df[1:3,] #This is how you select the top 3 values\nprojectdevelopers_df\n\n# A tibble: 3 × 2\n  DeveloperID DevComplete\n        &lt;int&gt;       &lt;int&gt;\n1         201           4\n2         211           4\n3         213           4\n\n# Custom SQL Query 1 = Select specific budget ranges from the project table \n#Filter is the dplyr libraries version of Like and or according to multiple articles I read https://sebastiansauer.github.io/dplyr_filter/ and https://stackoverflow.com/questions/32829358/dplyr-filter-with-sql-like-wildcard\nprojects_df &lt;- projects_df %&gt;% filter(Budget &gt; 200000) %&gt;% filter(Budget &lt; 350000)\nprojects_df\n\n# A tibble: 2 × 7\n  ProjectID ProjectName     StartDate  EndDate    Budget Status      CustomerID\n      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;      &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;            &lt;int&gt;\n1       104 Urban Adventure 2022-10-01 2023-02-31 250000 Completed            4\n2       105 Ocean Odyssey   2023-03-01 2024-06-30 300000 In Progress          5\n\n#custom query 2: Select projectID and AssetID from asset table using the distinct function and the arrange which is dplyrs version of the SQL query DISTINCT and ORDER_BY Reference: https://sparkbyexamples.com/r-programming/dplyr-arrange-function-in-r/#:~:text=R%20arrange()%20Ascending%20Order,either%20ascending%20or%20descending%20order.\nassets_df &lt;- assets_df %&gt;% distinct(assets_df, pick(contains(\"ID\"))) %&gt;% arrange(desc(AssetID)) %&gt;% arrange(desc(ProjectID))\nassets_df\n\n# A tibble: 42 × 5\n   AssetID ProjectID AssetName Type               CreationDate\n     &lt;int&gt;     &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;              &lt;chr&gt;       \n 1      39       104 Asset 39  Character Model    2021-04-15  \n 2      35       104 Asset 35  Character Model    2021-06-15  \n 3      31       104 Asset 31  3D Model           2021-02-15  \n 4      27       104 Asset 27  UI Element         2021-04-15  \n 5      23       104 Asset 23  Environment Design 2021-06-15  \n 6      19       104 Asset 19  Texture            2021-02-15  \n 7      15       104 Asset 15  Animation          2021-04-15  \n 8      11       104 Asset 11  Sound              2021-06-15  \n 9       7       104 Asset 7   Texture            2021-02-15  \n10       3       104 Asset 3   3D Model           2021-04-15  \n# ℹ 32 more rows\n\n#PART B-A:\n#Setting up the data to be modelled.\nprojects_df2\n\n# A tibble: 8 × 7\n  ProjectID ProjectName       StartDate  EndDate    Budget Status     CustomerID\n      &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;      &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;           &lt;int&gt;\n1       101 Galaxy Quest      2021-01-01 2021-09-30 100000 Completed           1\n2       102 Mystic Realms     2021-10-01 2021-12-31 200000 Completed           2\n3       103 Shadow Legacy     2022-01-01 2022-09-30 150000 Completed           3\n4       104 Urban Adventure   2022-10-01 2023-02-31 250000 Completed           4\n5       105 Ocean Odyssey     2023-03-01 2024-06-30 300000 In Progre…          5\n6       106 Desert Survival   2024-07-01 2024-12-31 350000 Planned             6\n7       107 Frozen Frontier   2025-01-01 2025-06-30 400000 Planned             7\n8       108 Cybernetic Dreams 2025-07-01 2025-12-31 450000 Planned             8\n\nprojects_df2 &lt;- projects_df2[,-c(6,7)]\nprojects_df2 &lt;- projects_df2 %&gt;% mutate(StartDate  = ymd(StartDate),EndDate = ymd(EndDate)) %&gt;% mutate(DifferenceInDays = as.numeric(difftime(EndDate, StartDate, units = \"days\")))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `EndDate = ymd(EndDate)`.\nCaused by warning:\n!  1 failed to parse.\n\nBudget &lt;- projects_df2$Budget\nDaysInDiff &lt;- projects_df2$DifferenceInDays\nRegression &lt;- projects_df2 %&gt;% lm(Budget ~ DifferenceInDays, data = .) %&gt;% summary()\nplot(Budget,DaysInDiff,col = \"red\",\n     abline(Regression),\n     xlab = \"Budget\", ylab = \"DaysInDifference\")\n\nWarning in abline(Regression): only using the first two of 8 regression\ncoefficients\n\n\n\n\n#This should print the plot with the line along but it is not showcasing the line \n\n#Part B-B\n#Interpretting the regression model: It seems as though\n#there is a corelation between the results of Budget\n#and The days taken to create the fuill project in games development.\n#There are twom major outliers where the two middle ground\n#budgets actually take both the shortest and the longest\n#amount of time out of all of the projects which is a fun\n#little data observbation. It does apper as though the games\n#with higher budgets get amde faster which may be because \n#talent is getting paid more or because they have \n#more resources to expend on the project\n\n#Part B-C\n#  I know from looking at tutorials and other data pieces\n# (source: https://www.youtube.com/watch?v=DY5xMgBQsOU \n# and https://www.youtube.com/watch?v=-mGXnm0fHtI&t=634s)\n# that the linear regression test is very reliable and \n# good for data analytics but unfortunately I don't believe\n# that I have done mine correctly as my line is not drawing\n# on the graph. The data is all there when I rpint the\n# summary but it is not showing on the plot which is \n# incredibly frustrating. As I mentioned before that \n# there are two massive outliers in my data as the two\n# middle projects take the longest and shortest amounts\n# of time in comparison to the budget which is a fun \n# data fact that I thought was interesting."
  }
]